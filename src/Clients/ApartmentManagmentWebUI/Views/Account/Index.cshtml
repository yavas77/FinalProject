@model List<UserListModel>
@{
	ViewData["Title"] = "Index";
}


<!-- Content Header (Page header) -->
<div class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-12">
				<h1 class="m-0">Kullanıcı listesi</h1>
			</div><!-- /.col -->
		</div><!-- /.row -->
	</div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- Main content -->
<section class="content">
	<div class="container-fluid">
		<!-- /.row -->
		<div class="row">
			<div class="col-12">
				<div class="card">
					<div class="card-header">
						<h3 class="card-title"></h3>

						<div class="card-tools">
							@* <form method="get">
								<div class="input-group input-group-sm" style="width: 150px;">
								<input type="text" name="s" class="form-control float-right" placeholder="Ara">

								<div class="input-group-append">
								<button type="submit" class="btn btn-default">
								<i class="fas fa-search"></i>
								</button>
								</div>
								</div>
								</form>*@
						</div>
					</div>
					<!-- /.card-header -->
					@if (Model.Count > 0)
					{


						<div class="card-body table-responsive p-0">
							<table class="table table-hover text-nowrap">
								<thead>
									<tr>
										<th>Ad Soyad</th>
										<th>Telefon</th>
										<th>Email</th>
										<th>TC</th>
										<th>Araç Plakası</th>
										<th>Dairesi</th>
										<th>Bakiyesi</th>
										@*<th style="width:120px">Durumu</th>*@
										<th style="width:180px"></th>
									</tr>
								</thead>
								<tbody>

									@foreach (var user in Model)
									{
										<tr data-id="@user.Id">
											<td>@user.FirstName @user.LastName</td>
											<td>@user.PhoneNumber</td>
											<td>@user.Email</td>
											<td>@user.TC</td>
											<td>@user.Plate</td>
											<td>@user.Apartment</td>
											<td>@user.Balance</td>


											<td>
												<a asp-action="Update" asp-route-id="@user.Id" class="btn btn-outline-warning btn-sm"> Düzenle </a>
												<a class="delete btn btn-outline-danger btn-sm" data-id="@user.Id">Sil</a>
												<a class="set btn btn-primary btn-sm" data-toggle="modal" data-id="@user.Id" data-target="#exampleModal">
													Daire Tanımlama
												</a>
											</td>
										</tr>
									}


								</tbody>
							</table>
						</div>
						<!-- /.card-body -->
					}
					else
					{
						<span>Kayıtlı Kullanıcı bulunamadı.</span>
					}
				</div>
				<!-- /.card -->
			</div>
		</div>
		<!-- /.row -->
	</div><!-- /.container-fluid -->

	<input type="hidden" id="userIdhd" />
</section>

@await Component.InvokeAsync("SetUserApartment")


<!-- /.content -->
@section Scripts{
<script>
	$().ready(function () {
		$(".delete").click(function () {
			var deleteUserModel = {
				id: $(this).data("id")
			}

			$.ShowConfirm('Dikkat', 'Kullanıcı tamamen silinecek, Devam etmek istiyor musunuz?', 'Evet', 'İptal', function () { $.AjaxDelete('/Account/Delete/', deleteUserModel) }
			);

		});
	});
</script>

<script>
	$().ready(function () {
			$(".set").click(function () {
				var uId = $(this).data("id");	
				$("#userIdhd").val(uId);
			});	
		});
</script>
	 
<script>
		$("#btnKaydet").click(function () {

			var setUserApartment = {
				userId: $("#userIdhd").val(),
				apartmentId : $("#selectAptId option:selected").val()

			}

			$.AjaxCreate('/Account/SetUserApartment/', setUserApartment) 
			
		});
</script>

}